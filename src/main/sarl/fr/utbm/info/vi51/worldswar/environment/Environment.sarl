package fr.utbm.info.vi51.worldswar.environment

import fr.utbm.info.vi51.worldswar.simulator.SimulationStepEvent
import fr.utbm.info.vi51.worldswar.simulator.StopSimulationEvent
import fr.utbm.info.vi51.worldswar.utils.Grid
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging

/**
 * While it does not appear obvious, this agent manages the environment.
 * */
agent Environment {
	uses Logging, DefaultContextInteractions, Lifecycle
	
	var grid : Grid<Cell>
	
	on Initialize {
		// TODO replace values with actual width and height of the environment
		this.grid = new Grid(0,500,0,500)
		for(var x = 0; x < 500; x++) {
			for(var y = 0; y < 500; y++) {
				grid.set(x,y, new Cell)
			}
		}
	}
	
	on SimulationStepEvent {
		println("Simulation step")
		
		emit(new EnvironmentReadyEvent)
	}
	
	on StopSimulationEvent {
		//TODO In the future, it should wait for all the spawned agents to terminate
		killMe
	}
	
	on Destroy {
		emit(new EnvironmentTerminatedEvent)
	}
	
}