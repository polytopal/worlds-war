package fr.utbm.info.vi51.worldswar.^agent.^event

import fr.utbm.info.vi51.worldswar.^agent.AntAgent
import fr.utbm.info.vi51.worldswar.environment.Environment
import fr.utbm.info.vi51.worldswar.perception.AntPerception
import io.sarl.lang.core.Address
import java.util.UUID
import java.util.concurrent.ConcurrentHashMap

/**
 * Event emitted by the {@link Environment} to a specific {@link AntAgent}.
 * Contains the agent's perceptions for the current step, and triggers the agent's AI.
 */
event PerceptionEvent {
	
	val callbackAddress : Address
	
	val perceptions : ConcurrentHashMap<UUID, AntPerception>
	val nbAgents : int
	
	/**
	 * @param callbackAddress : the address to send the influence to
	 * @param perceptionGrid : the collection of perceivable that will be sent to the agent
	 */	
	new(callbackAddress : Address, antPerceptions : ConcurrentHashMap<UUID, AntPerception>, nbAgents : int) {
		this.callbackAddress = callbackAddress
		this.perceptions = antPerceptions
		this.nbAgents = nbAgents
	}
}